def is_valid_sudoku(board):
    # Check rows
    for i in range(9):
        row = [x for x in board[i] if x != '.']
        if len(row) != len(set(row)):
            return False

    # Check columns
    for i in range(9):
        column = [board[j][i] for j in range(9) if board[j][i] != '.']
        if len(column) != len(set(column)):
            return False

    # Check sub-boxes
    for i in range(0, 9, 3):
        for j in range(0, 9, 3):
            sub_box = [board[x][y] for x in range(i, i+3) for y in range(j, j+3) if board[x][y] != '.']
            if len(sub_box) != len(set(sub_box)):
                return False

    # If all checks pass, the board is valid
    return True

board = [
    ['5', '3', '.', '.', '7', '.', '.', '.', '.'],
    ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
    ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
    ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
    ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
    ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
    ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
    ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
    ['.', '.', '.', '.', '8', '.', '.', '7', '9']
]

print(is_valid_sudoku(board)) # True
